#include<bits/stdc++.h>
using namespace std;


int binarySearch(int arr[], int size, int key){

    int start = 0;
    int end = size - 1;

    int mid = (start+end)/2;  
    //int  mid = start + ((end - start)/2);

    while(start <= end){

        if(arr[mid] == key){
            return mid;
        }

        if(key > arr[mid]){         //go to right part
            start = mid + 1;   //right --> start=mid+1
        }
        else{//if(key < arr[mid])   //go to left part
            end = mid - 1;     //left --> start=mid+1
        }

        mid = (start+end)/2;    
    } 

    return -1; // number is not present in the array
}

int main(){
    int even[6] = {2,4,6,8,12,18};
    int odd[5] = {3,8,11,14,16};

    int evenindex = binarySearch(even, 6, 6);
    cout << "Index of 6 is " << evenindex << endl;

    int oddindex = binarySearch(odd, 5, 16);
    cout << "Index of 16 is " << oddindex << endl;
    
    return 0;
}

// Time Complexity : O(logn) in binary search 
